<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cPst7l6hQm4SeQ2t2j0IdmllJPXrV9h//9k=
</value>
  </data>
</root>